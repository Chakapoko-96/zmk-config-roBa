#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define ZMK_POINTING_DEFAULT_SCRL_VAL 80
#define JP_UNDERSCORE   LS(0x87)          // _

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        //      mkp_exit_AML: mkp_exit_AML {
        //           compatible = "zmk,behavior-macro-one-param";
        //            #binding-cells = <1>;
        //            bindings =
        //                <&macro_press>,
        //                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
        //                <&macro_pause_for_release>,
        //                <&macro_release>,
        //                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
        //                <&macro_tap>,
        //                <&sl 4>;
        //
        //            label = "MKP_EXIT_AML";
        //        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W               &kp E             &kp R                        &kp T                                                                      &mt LC(Y) Y  &kp U  &kp I      &kp O    &kp P
&mt LC(A) A     &mt LC(S) S         &mt LC(D) D       &mt LC(F) F                  &kp G        &kp LS(LG(S))                              &kp MINUS          &kp H        &kp J  &kp K      &kp L    &lt 5 SEMICOLON
&mt LC(Z) Z     &mt LC(X) X         &mt LC(C) C       &mt LC(LS(V)) V              &mt LC(B) B  &kp INTERNATIONAL_3                        &kp JP_UNDERSCORE  &kp N        &kp M  &kp COMMA  &kp DOT  &lt 5 SINGLE_QUOTE
&kp LEFT_SHIFT  &mt LCTRL LEFT_WIN  &mt LEFT_ALT TAB  &lt_to_layer_0 6 INT_HENKAN  &lt 1 SPACE  &lt_to_layer_0 3 INT_KATAKANAHIRAGANA      &kp BACKSPACE      &lt 2 ENTER                             &mt RIGHT_SHIFT LEFT_BRACKET
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SYMBOLS {
            bindings = <
&kp EXCLAMATION  &kp AT     &kp HASH           &kp DLLR   &kp PRCNT                                                 &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp N7  &kp N8  &kp N9
&kp CARET        &kp AMPS   &kp QMARK          &kp EQUAL  &kp PLUS       &trans                   &kp MINUS         &kp RIGHT_BRACKET  &kp BSLH              &kp N4  &kp N5  &kp N6
&kp MINUS        &kp COLON  &kp DOUBLE_QUOTES  &kp SLASH  &kp LS(MINUS)  &kp INTERNATIONAL_3      &kp LEFT_BRACKET  &kp LESS_THAN      &kp GREATER_THAN      &kp N1  &kp N2  &kp N3
&kp LEFT_SHIFT   &kp LCTRL  &mt LEFT_ALT TAB   &trans     &trans         &trans                   &trans            &trans                                                   &kp N0
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8   &kp KP_NUMBER_9  &kp PLUS                                          &kp F7  &kp F8  &kp F9  &kp F10  &trans
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5   &kp KP_NUMBER_6  &kp ASTERISK  &kp KP_NUMLOCK           &kp ESC    &kp F4  &kp F5  &kp F6  &kp F11  &trans
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2   &kp KP_NUMBER_3  &kp PERIOD    &kp INTERNATIONAL_3      &kp EQUAL  &kp F1  &kp F2  &kp F3  &kp F12  &trans
&kp LEFT_SHIFT              &kp LCTRL        &mt LEFT_ALT TAB  &trans           &trans        &trans                   &trans     &trans                           &kp LEFT_BRACKET
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        ARROW {
            bindings = <
&kp LA(Q)       &mt LG(TAB) LA(TAB)  &kp LG(E)      &kp LG(R)            &kp LC(T)                                              &kp ESCAPE    &kp LC(LS(TAB))  &kp UP_ARROW    &kp LC(TAB)      &mt LC(P) LG(P)
&kp LC(A)       &kp LC(S)            &kp LC(D)      &kp LC(F)            &kp LC(G)  &trans                     &kp PRINTSCREEN  &kp TAB       &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_UP
&kp LC(Z)       &kp LC(X)            &kp LC(C)      &mt LC(LA(V)) LC(V)  &kp LC(B)  &kp LA(LS(RS(MINUS)))      &kp SCROLLLOCK   &kp CAPSLOCK  &kp HOME         &trans          &kp END          &kp PAGE_DOWN
&kp LEFT_SHIFT  &kp RCTRL            &kp LC(LSHFT)  &trans               &trans     &trans                     &trans           &trans                                                          &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        MOUSE {
            bindings = <
&to_layer_0 Q           &to_layer_0 W      &to_layer_0 E  &to_layer_0 R      &to_layer_0 T                                                                  &to_layer_0 Y       &to_layer_0 U  &to_layer_0 I  &to_layer_0 O  &to_layer_0 P
&to_layer_0 A           &to_layer_0 S      &to_layer_0 D  &to_layer_0 F      &to_layer_0 G      &trans                           &to_layer_0 MINUS          &to_layer_0 H       &to_layer_0 J  &to_layer_0 K  &mkp MB2       &lt 5 PAGE_UP
&to_layer_0 Z           &to_layer_0 X      &to_layer_0 C  &to_layer_0 V      &to_layer_0 B      &to_layer_0 INTERNATIONAL_3      &to_layer_0 JP_UNDERSCORE  &to_layer_0 N       &to_layer_0 M  &mkp MB1       &mkp MB2       &lt 5 PAGE_DOWN
&to_layer_0 LEFT_SHIFT  &to_layer_0 LCTRL  &to 0          &to_layer_0 LC(X)  &to_layer_0 LC(C)  &mt LC(LA(V)) LC(V)              &to_layer_0 BACKSPACE      &to_layer_0 RETURN                                               &to 0
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
